# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 5, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 5, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 5, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height =4, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 4, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 4, path = "./VF-figures")
library(gamlss.dist)
library(dplyr)
library(magrittr)
library(tidyverse)
library(ggpubr)
# define a function
vffunction <- function (N, mean_latency)
{
NCR = N*(1-exp(-60/mean_latency))
latencies = rexGAUS(n = NCR, mu = 1, sigma = 0.5, nu = mean_latency) %>% sort()
latencies <- latencies[latencies < 60]
time = seq(0, 60, 5)
correct = rep(NA, length(time))
correct[1] = 0
correct[2] <- correct[1] + sum(latencies <= 5)
correct[3] <- correct[2] + sum(latencies > 5 & latencies <= 10)
correct[4] <- correct[3] + sum(latencies > 10 & latencies <= 15)
correct[5] <- correct[4] + sum(latencies > 15 & latencies <= 20)
correct[6] <- correct[5] + sum(latencies > 20 & latencies <= 25)
correct[7] <- correct[6] + sum(latencies > 25 & latencies <= 30)
correct[8] <- correct[7] + sum(latencies > 30 & latencies <= 35)
correct[9] <- correct[8] + sum(latencies > 35 & latencies <= 40)
correct[10] <- correct[9] + sum(latencies > 40 & latencies <= 45)
correct[11] <- correct[10] + sum(latencies > 45 & latencies <= 50)
correct[12] <- correct[11] + sum(latencies > 50 & latencies <= 55)
correct[13] <- correct[12] + sum(latencies > 55 & latencies <= 60)
# to get the mean subsequent response latencies
k <- length(latencies)
for (i in 2:length(latencies))
{
kk <- latencies[i] - latencies[1]
k <- c(k, kk)}
srt <- mean(k)
df <- data.frame(ncr = correct, time = time, srt = srt)
}
# loop for different retrieval rate but similar vocab size.
# first group
group1_1_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(N = 24.5, mean_latency =  20)
group1_1_df <- rbind(group1_1_df, as.data.frame(ret))
}
group1_1_df$group = "1"
group1_1_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# second group
group1_2_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(N = 23, mean_latency =  10)
group1_2_df <- rbind(group1_2_df, as.data.frame(ret))
}
group1_2_df$group = "2"
group1_2_df$subject = paste("Subject ",rep(501:1000,each=13),sep="")
# combine them
df1 <- rbind(group1_1_df, group1_2_df)
# loop for similar retrieval rate but different vocab size.
# first group
group2_1_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(16, 24)
group2_1_df <- rbind(group2_1_df, as.data.frame(ret))
}
group2_1_df$group = "1"
group2_1_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# second group
group2_2_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(24, 24)
group2_2_df <- rbind(group2_2_df, as.data.frame(ret))
}
group2_2_df$group = "2"
group2_2_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# combine them
df2 <- rbind(group2_1_df, group2_2_df)
# plotting for df1
# function for calculating %95 confidence intervals
ci <- function(x){1.96*(sd(x)/sqrt(length(x)))}
# getting summaries
ncr_summary <- df1 %>%
group_by(group, time) %>%
summarise(mean_ncr = mean(ncr), se = ci(ncr))
ncr_summary$group %<>% recode("1" = "Group 1", "2" = "Group 2")
srt_summary <- df1 %>%
group_by(group) %>%
summarise(srt = mean(srt))
srt_summary$group %<>% recode("1" = "Group 1", "2" = "Group 2")
pd2 <- position_dodge(0.3)
#plotting
plot1 <- ncr_summary %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group)) +
theme_classic() + theme(text=element_text(size=12),
legend.position = "bottom") +
# geom_ribbon(aes(ymax = mean_ncr + se, ymin = mean_ncr - se), fill = "red", alpha = 0.3) +
geom_line(position = pd2, size = 1.5) +
scale_linetype_manual(values = c("solid", "longdash")) +
geom_point(size = 2.25, aes(fill = group), shape = 22, colour = "black") +
scale_fill_manual(values = c("black","white")) +
scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60)) +
labs(x="\n\nTime (Sec)", y="Mean Respons\n\n") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=srt_summary$srt[1], y=15, label= expression("SRT"[1]),
color="black", size = 4) +
annotate(geom="text", x=srt_summary$srt[2], y=17, label= expression("SRT"[2]),
color="black", size = 4) +
geom_segment(aes(x = srt_summary$srt[1], y = 14.5, xend = srt_summary$srt[1], yend = 13.5), size = 1.25,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = srt_summary$srt[2], y = 16.2, xend = srt_summary$srt[2], yend = 15.2), size = 1.25,
arrow = arrow(length = unit(0.2, "cm"))) +
theme_pubr() + labs_pubr() + theme(legend.position = "none")+
theme(text=element_text(family="Times New Roman", size=12))
# plotting for df2
# getting summaries
ncr_summary2 <- df2 %>%
group_by(time, group) %>%
summarise(mean_ncr = mean(ncr), se = ci(ncr))
ncr_summary2$group %<>% recode("1" = "Group 1", "2" = "Group 2")
srt_summary2 <- df2 %>%
group_by(group) %>%
summarise(srt = mean(srt))
srt_summary2$group %<>% recode("1" = "Group 1", "2" = "Group 2")
# plotting
plot2 <- ncr_summary2 %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group)) +
theme_classic() + theme(text=element_text(size=12),
legend.position = "bottom") +
geom_line(position = pd2, size = 1.5) +
scale_linetype_manual(values = c("solid", "longdash")) +
geom_point(size = 2.25, aes(fill = group), shape = 22, colour = "black") +
scale_fill_manual(values = c("black","white")) +
scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60)) +
labs(x="\n\nTime (Sec)", y="Mean Respons\n\n") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=srt_summary2$srt[1], y=14.50, label= expression("SRT"[1]),
color="black", size = 4) +
annotate(geom="text", x=srt_summary2$srt[2], y=10.25, label= expression("SRT"[2]),
color="black", size = 4) +
geom_segment(aes(x = srt_summary2$srt[1], y = 14.00, xend = srt_summary2$srt[1], yend = 13.0), size = 1.25,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = srt_summary2$srt[2], y = 9.75, xend = srt_summary2$srt[2], yend = 8.75), size = 1.25,
arrow = arrow(length = unit(0.2, "cm"))) +
theme_pubr() + labs_pubr() + theme(legend.position = "none") +
theme(text=element_text(family="Times New Roman", size=12))
plot2 + scale_shape_manual(values = c(0,15))
# combine two plots
combined_plot <- ggarrange(plot1, plot2,
labels = c("A", "B"),
ncol = 2, nrow = 1)
combined_plot + theme(text=element_text(family="Times New Roman", size=12))
print(combined_plot)
ggsave("modeling_plot.png", combined_plot, height = 5, width = 17)
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
scale_color_discrete("Group") +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
scale_color_discrete("Group") +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
fig4
# function for simulating data points
vffunction <- function (N, mean_latency){
NCR = N*(1-exp(-60/mean_latency))
latencies = rexGAUS(n = NCR, mu = 1, sigma = 0.5, nu = mean_latency) %>% sort()
latencies <- latencies[latencies < 60]
time = seq(0, 60, 5)
correct = rep(NA, length(time))
correct[1] = 0
correct[2] <- correct[1] + sum(latencies <= 5)
correct[3] <- correct[2] + sum(latencies > 5 & latencies <= 10)
correct[4] <- correct[3] + sum(latencies > 10 & latencies <= 15)
correct[5] <- correct[4] + sum(latencies > 15 & latencies <= 20)
correct[6] <- correct[5] + sum(latencies > 20 & latencies <= 25)
correct[7] <- correct[6] + sum(latencies > 25 & latencies <= 30)
correct[8] <- correct[7] + sum(latencies > 30 & latencies <= 35)
correct[9] <- correct[8] + sum(latencies > 35 & latencies <= 40)
correct[10] <- correct[9] + sum(latencies > 40 & latencies <= 45)
correct[11] <- correct[10] + sum(latencies > 45 & latencies <= 50)
correct[12] <- correct[11] + sum(latencies > 50 & latencies <= 55)
correct[13] <- correct[12] + sum(latencies > 55 & latencies <= 60)
# to get the mean subsequent response latencies
k <- length(latencies)
for (i in 2:length(latencies))
{
kk <- latencies[i] - latencies[1]
k <- c(k, kk)}
srt <- mean(k)
df <- data.frame(ncr = correct, time = time, srt = srt)
}
# loop for different retrieval rate but similar vocab size.
# first group
group1_1_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(N = 23, mean_latency =  10)
group1_1_df <- rbind(group1_1_df, as.data.frame(ret))
}
group1_1_df$Group = "1"
group1_1_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# second group
group1_2_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(N = 24.5, mean_latency =  20)
group1_2_df <- rbind(group1_2_df, as.data.frame(ret))
}
group1_2_df$Group = "2"
group1_2_df$subject = paste("Subject ",rep(501:1000,each=13),sep="")
# combine them
df_sim_first <- rbind(group1_1_df, group1_2_df) %>% mutate(simulated = "DifRateEqSize")
# loop for similar retrieval rate but different vocab size.
# first group
group2_1_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(16, 24)
group2_1_df <- rbind(group2_1_df, as.data.frame(ret))
}
group2_1_df$Group = "1"
group2_1_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# second group
group2_2_df <- data.frame()
for (i in 1:500) {
ret <- vffunction(24, 24)
group2_2_df <- rbind(group2_2_df, as.data.frame(ret))
}
group2_2_df$Group = "2"
group2_2_df$subject = paste("Subject ",rep(1:500,each=13),sep="")
# combine them
df_sim_second <- rbind(group2_1_df, group2_2_df) %>% mutate(simulated = "EqRateDifSize")
# combine both simulations
df_simulated <- rbind(df_sim_first, df_sim_second)
# summarize simulations
df_simulated_summary <- df_simulated %>% group_by(group, time, simulated) %>%
summarise(mean_ncr = mean(ncr), ci_ncr = ci(ncr))
df_simulated_summary$group %<>% recode("1" = "Late", "2" = "Native")
# summarize simulated srts
df_simulated_srt_summary <- df_simulated %>% group_by(group, simulated) %>%
summarise(mean_srt = mean(srt), ci_srt = ci(srt))
df_simulated_srt_summary$group %<>% recode("1" = "Late", "2" = "Native")
# save simulated data
saveRDS(df_simulated,"./models_data/df_simulated.rds")
saveRDS(df_simulated_srt_summary, "./models_data/df_simulated_srt_summary.rds")
saveRDS(df_simulated_summary,"./models_data/df_simulated_summary.rds")
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.title = element_blank()) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.title = element_blank()) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.position = element_blank()) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.position = element_blank()) +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.position = "none") +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.position = "none") +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
fig4
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = FALSE, legend="bottom", labels=c("A", "B"))
fig4
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1,legend="bottom", labels=c("A", "B"))
fig4
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, legend="bottom", labels=c("A", "B"))
fig4
sim_plot_2
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, common.legend = TRUE, labels=c("A", "B"))
fig4
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, labels=c("A", "B"))
fig4
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height =4, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 4, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 4, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 7.75, height = 3.5, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 7.75, height = 3.5, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 7.75, height = 3.5, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 3, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 3, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 3, path = "./VF-figures")
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=16), axis.text = element_blank(), axis.ticks = element_blank())
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=16), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, labels=c("A", "B"))
fig4
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 3, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 3, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 7.9, height = 3.5, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 7.9, height = 3.5, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 7.9, height = 3.5, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 3.5, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 3.5, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 3.5, path = "./VF-figures")
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 4, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 4, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 4, path = "./VF-figures")
# plotting different retrieval rate, same vocabulary size
sim_plot_1 <- df_simulated_summary %>% subset(simulated == "DifRateEqSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="Mean Response") +
ggtitle("Similar vocabulary size and different retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[3], y=15, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[1], y=16, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[3], y = 14.5, xend = df_simulated_srt_summary$mean_srt[3], yend = 13.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[1], y = 15.5, xend = df_simulated_srt_summary$mean_srt[1], yend = 14.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
sim_plot_2 <- df_simulated_summary %>% subset(simulated == "EqRateDifSize") %>%
ggplot(aes(time, mean_ncr, group = group, linetype = group, color = group, shape = group)) +
geom_line() + geom_point(size = 3) +
labs(x="Time (Sec)", y="") +
ggtitle("Different vocabulary size and similar retrieval rate") +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[4], y=14, label= expression("SRT"[1]), color="black", size = 3.5) +
annotate(geom="text", x=df_simulated_srt_summary$mean_srt[2], y=9.5, label= expression("SRT"[2]), color="black", size = 3.5) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[4], y = 13.5, xend = df_simulated_srt_summary$mean_srt[4], yend = 12.5),
arrow = arrow(length = unit(0.2, "cm")), color="black",show.legend = F) +
geom_segment(aes(x = df_simulated_srt_summary$mean_srt[2], y = 9, xend = df_simulated_srt_summary$mean_srt[2], yend = 8),
arrow = arrow(length = unit(0.2, "cm")), color="black", show.legend = F) +
theme(legend.position='none') +
theme(text=element_text(family="Times New Roman", size=12), axis.text = element_blank(), axis.ticks = element_blank())
fig4 <- ggarrange(sim_plot_1, sim_plot_2, ncol=2, nrow=1, labels=c("A", "B"))
fig4
# figure 4 save
ggsave("VF-Fig_4.pdf", plot = fig4, width = 8, height = 4, device = cairo_pdf, path = "./VF-figures")
ggsave("VF-Fig_4.tiff", plot = fig4, width = 8, height = 4, path = "./VF-figures")
ggsave("VF-Fig_4.png", plot = fig4, width = 8, height = 4, path = "./VF-figures")
